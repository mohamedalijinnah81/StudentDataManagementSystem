/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package studentmanagement;

import java.math.BigDecimal;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.DecimalFormat;
import java.math.BigDecimal;
import java.sql.PreparedStatement;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.Document;
import java.time.format.DateTimeFormatter;

/**
 *
 * @author User
 */
public class StudentManagementSystem extends javax.swing.JFrame {

    /**
     * Creates new form StudentManagementSystem
     */
    int temp = 0;
    public StudentManagementSystem() {
        setExtendedState(JFrame.MAXIMIZED_BOTH);
        setTitle("STUDENT DATA MANAGEMENT");
        initComponents();
        Connection con;
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/studentmanagement","root","");
            Statement st = con.createStatement();
            String qry = "select * from student";
            ResultSet rs = st.executeQuery(qry);
            //DefaultTableModel model = (DefaultTableModel)studtable.getModel();
            //model.getDataVector().removeAllElements();
            while(rs.next()) {
                
                cbstudno.addItem(Integer.toString(rs.getInt(1)));
                /*temp = rs.getInt(1) + 1;
                cbstudno.addItem(Integer.toString(rs.getInt(1)));
                String studID = Integer.toString(rs.getInt("StudID"));
                String fname = rs.getString("Firstname");
                String lname = rs.getString("Lastname");
                String gender = rs.getString("Gender");
                String age = Integer.toString(rs.getInt("Age"));
                String dob = rs.getString("DateOfBirth");
                String dpt = rs.getString("Department");
                String clss = rs.getString("Class");
                String faname = rs.getString("Fathername");
                String moname = rs.getString("Mothername");
                BigDecimal cno = rs.getBigDecimal("ContactNo");
                String strcno = cno.toString();
                String tbldata[] = {studID, fname, lname, gender, age, dob, dpt, clss, faname, moname, strcno};
                //System.out.println(studID + fname + lname + gender + age + dob + dpt + clss + faname + moname + strcno);
                
                model.addRow(tbldata);*/
                
            }
            /*if(temp == 0) {
                temp = 101;
            }
            tfstudid.setText(Integer.toString(temp));*/
            con.close();
        }
        catch(Exception e) {
            
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        tfdob = new javax.swing.JTextField();
        tfage = new javax.swing.JTextField();
        tflname = new javax.swing.JTextField();
        tffname = new javax.swing.JTextField();
        tfstudid = new javax.swing.JTextField();
        tffaname = new javax.swing.JTextField();
        tfmoname = new javax.swing.JTextField();
        tfcno = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        cbstudno = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        studtable = new javax.swing.JTable();
        rbmale = new javax.swing.JRadioButton();
        rbfemale = new javax.swing.JRadioButton();
        cbdpt = new javax.swing.JComboBox<>();
        cbclss = new javax.swing.JComboBox<>();
        btnclear = new javax.swing.JButton();
        btninsert = new javax.swing.JButton();
        btndelete = new javax.swing.JButton();
        btnrefresh = new javax.swing.JButton();
        btnupdate = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setPreferredSize(new java.awt.Dimension(1920, 1080));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("MANAGE YOUR STUDENT DATA");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(696, 21, -1, 50));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Student ID : ");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(105, 166, -1, 40));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Firstname : ");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(105, 232, -1, 40));

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Lastname : ");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(105, 298, -1, 40));

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Gender : ");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(105, 364, -1, 40));

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Age : ");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(105, 430, -1, 40));

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Date Of Birth : ");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(105, 498, -1, 40));

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Department : ");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(105, 568, -1, 40));

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Class : ");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(105, 634, -1, 40));

        jLabel10.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Father Name : ");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(105, 700, -1, 40));

        jLabel11.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Mother Name : ");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(105, 767, -1, 40));

        jLabel12.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Contact No : ");
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(105, 834, -1, 40));

        tfdob.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jPanel1.add(tfdob, new org.netbeans.lib.awtextra.AbsoluteConstraints(295, 497, 140, 43));

        tfage.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jPanel1.add(tfage, new org.netbeans.lib.awtextra.AbsoluteConstraints(295, 430, 140, 40));

        tflname.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jPanel1.add(tflname, new org.netbeans.lib.awtextra.AbsoluteConstraints(295, 298, 140, 40));

        tffname.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jPanel1.add(tffname, new org.netbeans.lib.awtextra.AbsoluteConstraints(295, 232, 140, 40));

        tfstudid.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jPanel1.add(tfstudid, new org.netbeans.lib.awtextra.AbsoluteConstraints(295, 166, 140, 40));

        tffaname.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jPanel1.add(tffaname, new org.netbeans.lib.awtextra.AbsoluteConstraints(295, 700, 140, 40));

        tfmoname.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jPanel1.add(tfmoname, new org.netbeans.lib.awtextra.AbsoluteConstraints(295, 767, 140, 40));

        tfcno.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jPanel1.add(tfcno, new org.netbeans.lib.awtextra.AbsoluteConstraints(295, 834, 140, 40));

        jLabel13.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Select Your Student : ");
        jPanel1.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(696, 166, -1, 40));

        cbstudno.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        cbstudno.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cbstudno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbstudnoActionPerformed(evt);
            }
        });
        cbstudno.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                cbstudnoPropertyChange(evt);
            }
        });
        jPanel1.add(cbstudno, new org.netbeans.lib.awtextra.AbsoluteConstraints(939, 166, 80, 40));

        studtable.setFont(new java.awt.Font("Times New Roman", 0, 13)); // NOI18N
        studtable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Stud ID", "Firstname", "Lastname", "Gender", "Age", "Date Of Birth", "Department", "Class", "Father Name", "Mother Name", "Contact No"
            }
        ));
        jScrollPane1.setViewportView(studtable);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(696, 236, 1200, 638));

        buttonGroup.add(rbmale);
        rbmale.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        rbmale.setForeground(new java.awt.Color(255, 255, 255));
        rbmale.setText(" Male");
        jPanel1.add(rbmale, new org.netbeans.lib.awtextra.AbsoluteConstraints(295, 364, -1, 40));

        buttonGroup.add(rbfemale);
        rbfemale.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        rbfemale.setForeground(new java.awt.Color(255, 255, 255));
        rbfemale.setText(" Female");
        jPanel1.add(rbfemale, new org.netbeans.lib.awtextra.AbsoluteConstraints(406, 364, -1, 40));

        cbdpt.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        cbdpt.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "COMPUTER SCIENCE", "INFORMATION TECHNOLOGY", "COMPUTER APPLICATIONS" }));
        jPanel1.add(cbdpt, new org.netbeans.lib.awtextra.AbsoluteConstraints(295, 568, -1, 40));

        cbclss.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        cbclss.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "FIRST YEAR", "SECOND YEAR", "THIRD YEAR" }));
        jPanel1.add(cbclss, new org.netbeans.lib.awtextra.AbsoluteConstraints(295, 634, -1, 40));

        btnclear.setBackground(new java.awt.Color(204, 0, 153));
        btnclear.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        btnclear.setForeground(new java.awt.Color(255, 255, 255));
        btnclear.setText("Clear All");
        btnclear.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnclear.setPreferredSize(new java.awt.Dimension(130, 40));
        btnclear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnclearActionPerformed(evt);
            }
        });
        jPanel1.add(btnclear, new org.netbeans.lib.awtextra.AbsoluteConstraints(295, 919, -1, -1));

        btninsert.setBackground(new java.awt.Color(0, 102, 255));
        btninsert.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        btninsert.setForeground(new java.awt.Color(255, 255, 255));
        btninsert.setText("Insert");
        btninsert.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btninsert.setPreferredSize(new java.awt.Dimension(130, 40));
        btninsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btninsertActionPerformed(evt);
            }
        });
        jPanel1.add(btninsert, new org.netbeans.lib.awtextra.AbsoluteConstraints(1043, 919, -1, -1));

        btndelete.setBackground(new java.awt.Color(255, 0, 0));
        btndelete.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        btndelete.setForeground(new java.awt.Color(255, 255, 255));
        btndelete.setText("Delete");
        btndelete.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btndelete.setPreferredSize(new java.awt.Dimension(130, 40));
        btndelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndeleteActionPerformed(evt);
            }
        });
        jPanel1.add(btndelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(1766, 919, -1, -1));

        btnrefresh.setBackground(new java.awt.Color(0, 102, 255));
        btnrefresh.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        btnrefresh.setForeground(new java.awt.Color(255, 255, 255));
        btnrefresh.setText("Refresh");
        btnrefresh.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnrefresh.setPreferredSize(new java.awt.Dimension(130, 40));
        btnrefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnrefreshActionPerformed(evt);
            }
        });
        jPanel1.add(btnrefresh, new org.netbeans.lib.awtextra.AbsoluteConstraints(696, 919, -1, -1));

        btnupdate.setBackground(new java.awt.Color(0, 102, 255));
        btnupdate.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        btnupdate.setForeground(new java.awt.Color(255, 255, 255));
        btnupdate.setText("Update");
        btnupdate.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnupdate.setPreferredSize(new java.awt.Dimension(130, 40));
        btnupdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnupdateActionPerformed(evt);
            }
        });
        jPanel1.add(btnupdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(1406, 919, -1, -1));

        jLabel14.setForeground(new java.awt.Color(255, 0, 0));
        jLabel14.setText("* DD/MM/YYYY");
        jLabel14.setPreferredSize(new java.awt.Dimension(48, 40));
        jPanel1.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(447, 501, 96, -1));

        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/sample4.jpg"))); // NOI18N
        jPanel1.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1920, 1080));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnrefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnrefreshActionPerformed
        // TODO add your handling code here:
        Connection con;
        cbstudno.setSelectedIndex(0);
        /*btninsert.setVisible(true);
        btnupdate.setVisible(false);
        btndelete.setVisible(false);*/
        tffname.setText("");
        tflname.setText("");
        buttonGroup.clearSelection();
        tfage.setText("");
        tfdob.setText("");
        cbdpt.setSelectedIndex(-1);
        cbclss.setSelectedIndex(-1);
        tffaname.setText("");
        tfmoname.setText("");
        tfcno.setText("");
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/studentmanagement","root","");
            Statement st = con.createStatement();
            String qry = "select * from student";
            ResultSet rs = st.executeQuery(qry);
            DefaultTableModel model = (DefaultTableModel)studtable.getModel();
            model.getDataVector().removeAllElements();
            while(rs.next()) {
                String studID = Integer.toString(rs.getInt("StudID"));
                String fname = rs.getString("Firstname");
                String lname = rs.getString("Lastname");
                String gender = rs.getString("Gender");
                String age = Integer.toString(rs.getInt("Age"));
                String dob = rs.getString("DateOfBirth");
                String dpt = rs.getString("Department");
                String clss = rs.getString("Class");
                String faname = rs.getString("Fathername");
                String moname = rs.getString("Mothername");
                BigDecimal cno = rs.getBigDecimal("ContactNo");
                String strcno = cno.toString();
                String tbldata[] = {studID, fname, lname, gender, age, dob, dpt, clss, faname, moname, strcno};
                model.addRow(tbldata);
            }
            tfstudid.setText(Integer.toString(temp));
        }
        catch(Exception e) {
                    
        }
    }//GEN-LAST:event_btnrefreshActionPerformed

    private void btnclearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnclearActionPerformed
        // TODO add your handling code here:
        tfstudid.setText(cbstudno.getSelectedItem().toString());
        tffname.setText("");
        tflname.setText("");
        rbmale.setSelected(false);
        rbfemale.setSelected(false);
        tfage.setText("");
        tfdob.setText("");
        cbdpt.setSelectedIndex(-1);
        cbclss.setSelectedIndex(-1);
        tffaname.setText("");
        tfmoname.setText("");
        tfcno.setText("");
    }//GEN-LAST:event_btnclearActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowClosing

    private void cbstudnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbstudnoActionPerformed
        // TODO add your handling code here:
        int studID = Integer.parseInt(cbstudno.getSelectedItem().toString());
        Connection con;
        int flag = Integer.parseInt(cbstudno.getSelectedItem().toString());
        /*if(flag < temp) {
            btninsert.setVisible(false);
            btnupdate.setVisible(true);
            btndelete.setVisible(true);
        }*/
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/studentmanagement","root","");
            Statement st = con.createStatement();
            String qry = "select * from student where StudID = "+studID+"";
            ResultSet rs = st.executeQuery(qry);
            while(rs.next()) {
                tfstudid.setText(Integer.toString(rs.getInt("StudID")));
                tffname.setText(rs.getString("Firstname"));
                tflname.setText(rs.getString("Lastname"));
                if(rs.getString("Gender").equals("MALE"))
                    rbmale.setSelected(true);
                else if(rs.getString("Gender").equals("FEMALE"))
                    rbfemale.setSelected(true);
                tfage.setText(Integer.toString(rs.getInt("Age")));
                tfdob.setText(rs.getString("dateOfBirth"));
                cbdpt.setSelectedItem(rs.getString("Department"));
                cbclss.setSelectedItem(rs.getString("Class"));
                tffaname.setText(rs.getString("Fathername"));
                tfmoname.setText(rs.getString("Mothername"));
                BigDecimal cno = rs.getBigDecimal("ContactNo");
                tfcno.setText(cno.toString());
            }
            con.close();
        }
        catch(Exception e) {
            
        }
    }//GEN-LAST:event_cbstudnoActionPerformed

    private void deleteData(int studid) {
        Connection con;
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/studentmanagement","root","");
            String qry = "delete from student where StudID="+studid+"";
            PreparedStatement st = con.prepareStatement(qry);
            st.execute();
            cbstudno.removeItem(String.valueOf(studid));
            JOptionPane.showMessageDialog(this, "Values deleted successfully!");
            con.close();
        }
        catch(Exception e) {
            System.out.println(e);
        }
    }
    
    private void btndeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndeleteActionPerformed
        // TODO add your handling code here:
        Connection con;
        int studid = Integer.parseInt(tfstudid.getText());
        boolean ans = false;
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/studentmanagement","root","");
            Statement st = con.createStatement();
            String qry = "select StudID from student";
            ResultSet rs = st.executeQuery(qry);
            while(rs.next()) {
                if(studid == rs.getInt("StudID"))
                    ans = true;
            }
            if(ans == true) {
                int cl = JOptionPane.showConfirmDialog(this, "Are You Sure Want To Delete Student Data?");
                if(cl == JOptionPane.YES_OPTION)
                    deleteData(studid);
            }
            else {
                JOptionPane.showMessageDialog(this, "Student data not available in the database");
            }
            con.close();
        }
        catch(Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_btndeleteActionPerformed

    private void cbstudnoPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_cbstudnoPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_cbstudnoPropertyChange

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // TODO add your handling code here:
        tfstudid.disable();
        tffname.setText("");
        tflname.setText("");
        buttonGroup.clearSelection();
        tfage.setText("");
        tfdob.setText("");
        //tfdob.setPlaceholder("Hi");
        cbdpt.setSelectedIndex(-1);
        cbclss.setSelectedIndex(-1);
        tffaname.setText("");
        tfmoname.setText("");
        tfcno.setText("");
        Connection con;
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/studentmanagement","root","");
            Statement st = con.createStatement();
            String qry = "select * from student";
            ResultSet rs = st.executeQuery(qry);
            DefaultTableModel model = (DefaultTableModel)studtable.getModel();
            model.getDataVector().removeAllElements();
            while(rs.next()) {
                temp = rs.getInt("StudID") + 1;
                String studID = Integer.toString(rs.getInt("StudID"));
                String fname = rs.getString("Firstname");
                String lname = rs.getString("Lastname");
                String gender = rs.getString("Gender");
                String age = Integer.toString(rs.getInt("Age"));
                String dob = rs.getString("DateOfBirth");
                String dpt = rs.getString("Department");
                String clss = rs.getString("Class");
                String faname = rs.getString("Fathername");
                String moname = rs.getString("Mothername");
                BigDecimal cno = rs.getBigDecimal("ContactNo");
                String strcno = cno.toString();
                String tbldata[] = {studID, fname, lname, gender, age, dob, dpt, clss, faname, moname, strcno};
                model.addRow(tbldata);
            }
            if(temp == 0)
                temp = 101;
            tfstudid.setText(Integer.toString(temp));
                
        }
        catch(Exception e) {
            
        }
    }//GEN-LAST:event_formWindowActivated
    private boolean valDate(String date) {
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");
        try {
            formatter.parse(date);
            //System.out.println("Valid Date");
            return true;
        }
        catch(Exception e) {
            //System.out.println("Invalid Date");
            return false;
        }
    }
    
    public void insertData(int studid, String fname, String lname, String gender, int age, String dob, String dpt, String clss, String faname, String moname, BigDecimal cno) {
        Connection con;
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/studentmanagement","root","");
            String qry = "insert into student (StudID,Firstname,Lastname,Gender,Age,DateOfBirth,Department,Class,Fathername,Mothername,ContactNo) values ("+studid+",'"+fname+"','"+lname+"','"+gender+"',"+age+",'"+dob+"','"+dpt+"','"+clss+"','"+faname+"','"+moname+"',"+cno+")";
            PreparedStatement st = con.prepareStatement(qry);
            st.execute();
            cbstudno.addItem(String.valueOf(studid));
            JOptionPane.showMessageDialog(this, "Values inserted successfully!");
            con.close();
        }
        catch(Exception e) {
            System.out.println(e);
        }
    }
    
    private void btninsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btninsertActionPerformed
        // TODO add your handling code here:
        int studid = Integer.parseInt(tfstudid.getText());
        boolean ans = false;
        Connection con;
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/studentmanagement","root","");
            Statement st = con.createStatement();
            String qry = "select StudID from student";
            ResultSet rs = st.executeQuery(qry);
            while(rs.next()) {
                if(studid == rs.getInt("StudID"))
                    ans = true;
            }
            if(ans == true) {
                JOptionPane.showMessageDialog(this, "Can't Insert Already Existing Student Data");
            } 
            else {
                boolean fname_result = false;
                boolean lname_result = false;
                boolean gender_result = false;
                boolean age_result = false;
                boolean dob_result = false;
                boolean dpt_result = false;
                boolean clss_result = false;
                boolean faname_result = false;
                boolean moname_result = false;
                boolean cno_result = false;
                
                String fname = tffname.getText().toUpperCase();
                if(fname.length() <= 15)
                    fname_result = true;
                
                String lname = tflname.getText().toUpperCase();
                if(lname.length() <= 15)
                    lname_result = true;
                
                String gender = "";
                if(rbmale.isSelected()) {
                    gender = "MALE";
                    gender_result = true;
                }
                else if(rbfemale.isSelected()) {
                    gender = "FEMALE";
                    gender_result = true;
                }
                else {
                    JOptionPane.showMessageDialog(this, "Gender Must Be Speified");
                    return;
                }
                
                int age = Integer.parseInt(tfage.getText());
                if(age >= 18 && age <=22)
                    age_result = true;
                
                String tempDate = tfdob.getText();
                String dob = "";
                boolean result = valDate(tempDate);
                if(result == true) {
                    dob += tempDate;
                    dob_result = true;
                }
                else {
                    //System.out.println("Can't Insert Invalid Date");
                    JOptionPane.showMessageDialog(this, "Invalid Date");
                    return;
                }
                
                String dpt = "";
                if(cbdpt.getSelectedIndex() >= 0 && cbdpt.getSelectedIndex() < 3) {
                    dpt = cbdpt.getSelectedItem().toString().toUpperCase();
                    dpt_result = true;
                }
                else {
                    JOptionPane.showMessageDialog(this, "Department Must Be Specified");
                    return;
                }
                
                String clss = "";
                if(cbclss.getSelectedIndex() >= 0 && cbclss.getSelectedIndex() < 3) {
                    clss = cbclss.getSelectedItem().toString().toUpperCase();
                    clss_result = true;
                }
                else {
                    JOptionPane.showMessageDialog(this, "Class Must Be Specified");
                    return;
                }
                
                String faname = tffaname.getText().toUpperCase();
                if(faname.length() <= 30)
                    faname_result = true;
                
                String moname = tfmoname.getText().toUpperCase();
                if(moname.length() <= 30)
                    moname_result = true;
                
                BigDecimal cno = new BigDecimal(tfcno.getText());
                if(tfcno.getText().length() <= 10)
                    cno_result = true;
                
                if(fname_result == true && lname_result == true && gender_result == true && age_result == true && dob_result == true && dpt_result == true && clss_result == true && faname_result == true && moname_result == true && cno_result == true) {
                    //System.out.println(studid + "  " + fname + "  " + lname + "  " + gender + "  " + age + "  " + dob + "  " + dpt + "  " + clss + "  " + faname + "  " + moname + "  " + cno);
                    int cl = JOptionPane.showConfirmDialog(this, "Are You Sure Want To Insert The Data?");
                    if(cl == JOptionPane.YES_OPTION) {
                        insertData(studid, fname, lname, gender, age, dob, dpt, clss, faname, moname, cno);
                        //con = DriverManager.getConnection("jdbc:mysql://localhost:3306/studentmanagement","root","");
                        //String qry2 = "insert into student(Firstname, Lastname) values('"+fname+"', '"+lname+"')";
                        //Statement st2 = con.createStatement();
                        //st2.executeUpdate(qry2);
                    }
                }
                else {
                    JOptionPane.showMessageDialog(this, "Please enter valid data in required fields");
                }
                    //System.out.println("ERROR");
                //String faname = 
                //System.out.println(clss);
            }
                //JOptionPane.showMessageDialog("I am Jinnah", JOptionPane.WARNING_MESSAGE);
            //String qry = "insert into student(StudID, Firstname, Lastname, gender, Age, DateOfBirth, Department, Class, Fathername, Mothername, ContactNo) values()";
        }
        catch(Exception e) {
            
        }
    }//GEN-LAST:event_btninsertActionPerformed

    private void updateData(int studid, String fname, String lname, String gender, int age, String dob, String dpt, String clss, String faname, String moname, BigDecimal cno) {
        Connection con;
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/studentmanagement","root","");
            String qry = "update student set Firstname='"+fname+"',Lastname='"+lname+"',Gender='"+gender+"',Age="+age+",DateOfBirth='"+dob+"',Department='"+dpt+"',Class='"+clss+"',Fathername='"+faname+"',Mothername='"+moname+"',ContactNo="+cno+" where studid="+studid+"";
            PreparedStatement st = con.prepareStatement(qry);
            st.execute();
            cbstudno.setSelectedIndex(0);
            JOptionPane.showMessageDialog(this, "Values updated successfully!");
            con.close();
        }
        catch(Exception e) {
            System.out.println(e);
        }
    }     
    
    private void btnupdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnupdateActionPerformed
        // TODO add your handling code here:
        Connection con;
        int studid = Integer.parseInt(tfstudid.getText());
        boolean ans = false;
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/studentmanagement","root","");
            Statement st = con.createStatement();
            String qry = "select StudID from student";
            ResultSet rs = st.executeQuery(qry);
            while(rs.next()) {
                if(studid == rs.getInt("StudID"))
                    ans = true;
            }
            if(ans == true) {
                boolean fname_result = false;
                boolean lname_result = false;
                boolean gender_result = false;
                boolean age_result = false;
                boolean dob_result = false;
                boolean dpt_result = false;
                boolean clss_result = false;
                boolean faname_result = false;
                boolean moname_result = false;
                boolean cno_result = false;
                
                String fname = tffname.getText().toUpperCase();
                if(fname.length() <= 15)
                    fname_result = true;
                
                String lname = tflname.getText().toUpperCase();
                if(lname.length() <= 15)
                    lname_result = true;
                
                String gender = "";
                if(rbmale.isSelected()) {
                    gender = "MALE";
                    gender_result = true;
                }
                else if(rbfemale.isSelected()) {
                    gender = "FEMALE";
                    gender_result = true;
                }
                else {
                    JOptionPane.showMessageDialog(this, "Gender Must Be Speified");
                    return;
                }
                
                int age = Integer.parseInt(tfage.getText());
                if(age >= 18 && age <=22)
                    age_result = true;
                
                String tempDate = tfdob.getText();
                String dob = "";
                boolean result = valDate(tempDate);
                if(result == true) {
                    dob += tempDate;
                    dob_result = true;
                }
                else {
                    //System.out.println("Can't Insert Invalid Date");
                    JOptionPane.showMessageDialog(this, "Invalid Date");
                    return;
                }
                
                String dpt = "";
                if(cbdpt.getSelectedIndex() >= 0 && cbdpt.getSelectedIndex() < 3) {
                    dpt = cbdpt.getSelectedItem().toString().toUpperCase();
                    dpt_result = true;
                }
                else {
                    JOptionPane.showMessageDialog(this, "Department Must Be Specified");
                    return;
                }
                
                String clss = "";
                if(cbclss.getSelectedIndex() >= 0 && cbclss.getSelectedIndex() < 3) {
                    clss = cbclss.getSelectedItem().toString().toUpperCase();
                    clss_result = true;
                }
                else {
                    JOptionPane.showMessageDialog(this, "Class Must Be Specified");
                    return;
                }
                
                String faname = tffaname.getText().toUpperCase();
                if(faname.length() <= 30)
                    faname_result = true;
                
                String moname = tfmoname.getText().toUpperCase();
                if(moname.length() <= 30)
                    moname_result = true;
                
                BigDecimal cno = new BigDecimal(tfcno.getText());
                if(tfcno.getText().length() <= 10)
                    cno_result = true;
                
                if(fname_result == true && lname_result == true && gender_result == true && age_result == true && dob_result == true && dpt_result == true && clss_result == true && faname_result == true && moname_result == true && cno_result == true) {
                    //System.out.println(studid + "  " + fname + "  " + lname + "  " + gender + "  " + age + "  " + dob + "  " + dpt + "  " + clss + "  " + faname + "  " + moname + "  " + cno);
                    int cl = JOptionPane.showConfirmDialog(this, "Are You Sure Want To Make Changes To The Data?");
                    if(cl == JOptionPane.YES_OPTION) {
                        updateData(studid, fname, lname, gender, age, dob, dpt, clss, faname, moname, cno);
                        //con = DriverManager.getConnection("jdbc:mysql://localhost:3306/studentmanagement","root","");
                        //String qry2 = "insert into student(Firstname, Lastname) values('"+fname+"', '"+lname+"')";
                        //Statement st2 = con.createStatement();
                        //st2.executeUpdate(qry2);
                    }
                }
            }
            else {
                JOptionPane.showMessageDialog(this, "Student data not available in database");
            }
        }
        catch(Exception e) {
            
        }
    }//GEN-LAST:event_btnupdateActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StudentManagementSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StudentManagementSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StudentManagementSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StudentManagementSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StudentManagementSystem().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnclear;
    private javax.swing.JButton btndelete;
    private javax.swing.JButton btninsert;
    private javax.swing.JButton btnrefresh;
    private javax.swing.JButton btnupdate;
    private javax.swing.ButtonGroup buttonGroup;
    private javax.swing.JComboBox<String> cbclss;
    private javax.swing.JComboBox<String> cbdpt;
    private javax.swing.JComboBox<String> cbstudno;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton rbfemale;
    private javax.swing.JRadioButton rbmale;
    private javax.swing.JTable studtable;
    private javax.swing.JTextField tfage;
    private javax.swing.JTextField tfcno;
    private javax.swing.JTextField tfdob;
    private javax.swing.JTextField tffaname;
    private javax.swing.JTextField tffname;
    private javax.swing.JTextField tflname;
    private javax.swing.JTextField tfmoname;
    private javax.swing.JTextField tfstudid;
    // End of variables declaration//GEN-END:variables
}
